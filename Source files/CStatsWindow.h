// =================================================================================//	CProgressWindow.h				©1995-1998  Metrowerks Inc. All rights reserved.// =================================================================================//	CProgressWindow.cp	#pragma once#include <LWindow.h>#include <LListener.h>#include <LStaticText.h>class CStatsWindow : public LWindow, public LListener, public LPeriodical{public:	enum { class_ID = 'Stat' };								CStatsWindow();								CStatsWindow( const SWindowInfo &inWindowInfo );								CStatsWindow( ResIDT inWINDid,									UInt32 inAttributes, LCommander *inSuperCommander );								CStatsWindow( LStream *inStream );								~CStatsWindow();	virtual void				ListenToMessage( MessageT inMessage, void *ioParam );				virtual void				FindCommandStatus(									CommandT			inCommand,									Boolean				&outEnabled,									Boolean				&outUsesMark,									UInt16				&outMark,									Str255				outName);																				virtual Boolean		HandleKeyPress(const EventRecord	&inKeyEvent);		void  	SetDefaultButton(PaneIDT	inButtonID);	void	HandleError(SInt32 errnum);	virtual	void				SpendTime( const EventRecord &inMacEvent );	virtual void				SetBusyState( Boolean inBusy );	virtual Boolean				GetBusyState() const {return mBusy;};		Boolean	SetProgressBar(SInt32 Round);	static LArray *stDrawCol1;	static LArray *stDrawCol2;	static LArray *stDrawCol3;	static LArray *stDrawCol4;	static LArray *stDrawCol1a;	static LArray *stDrawCol2a;	static LArray *sACFray;	static LArray *sPACFray;	static LArray *PThelp;	static LArray *PTintervals;	static LArray *PTstims;	static Float64 stMinx;	static Float64 stMaxx;	static Float64 stMiny;	static Float64 stMaxy;	static Float64 stMinx2;	static Float64 stMaxx2;	static Float64 stMiny2;	static Float64 stMaxy2;	static Float64 sMedianStat;	static Float64 sKWStat;	static Float64 sKSStat;	static Float64 sMedian, sMedian1, sMedian2;	static Float64 PermProb;	static Float64 PTspan;	static Float64 PTmintime;	static Float64 PTmaxtime;	static Float64 PValue;	static SInt32 Intervals1;	static SInt32 Intervals2;	static SInt32 maxorder;	static SInt32 PTcount;	static SInt32 PTmaxstim;	static Boolean KeepRepeating;	static SInt32	MaxRuns;	static Boolean HistORCumPSTHFlag;	static Boolean jrisflag;	static Float64	critval1;	static Float64	critval2;	static Float64	ksstat;	protected:	PaneIDT			mDefaultButtonID;	LDefaultOutline	*mDefaultOutline;	PaneIDT			mLastButton;	Boolean				mBusy;	virtual void				FinishCreateSelf();	void 						FindMinMax(Boolean normalize, Boolean normLR);	void 	ResetStatSettings();	void    GetStatSettings();	char *	WriteStatPlotData(SInt32 *dLength);};